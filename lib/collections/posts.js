// Generated by CoffeeScript 1.10.0
this.Posts = new Mongo.Collection('posts');

Posts.allow({
  update: function(userId, post) {
    return ownsDocument(userId, post);
  },
  remove: function(userId, post) {
    return ownsDocument(userId, post);
  }
});

Posts.deny({
  update: function(userId, post, fieldNames) {
    return _.without(fieldNames, 'url', 'title').length > 0;
  }
});

Posts.deny({
  update: function(userId, post, fieldNames, modifier) {
    var errors;
    errors = validatePost(modifier.$set);
    return errors.title || errors.url;
  }
});

this.validatePost = function(post) {
  var errors;
  errors = {};
  if (!post.title) {
    errors.title = "Please fill in a headline";
  }
  if (!post.url) {
    errors.url = "Please fill in a URL";
  }
  return errors;
};

Meteor.methods({
  postInsert: function(postAttributes) {
    var errors, post, postId, postWithSameLink, user;
    check(this.userId, String);
    check(postAttributes, {
      title: String,
      url: String
    });
    errors = validatePost(postAttributes);
    if (errors.title || errors.url) {
      throw new Meteor.Error('Invalid-Post', "You must set a title and URL for your post");
    }
    postWithSameLink = Posts.findOne({
      url: postAttributes.url
    });
    if (postWithSameLink) {
      return {
        postExists: true,
        _id: postWithSameLink._id
      };
    }
    user = Meteor.user();
    post = _.extend(postAttributes, {
      userId: user._id,
      author: user.username,
      submitted: new Date()
    });
    postId = Posts.insert(post);
    return {
      _id: postId
    };
  }
});

//# sourceMappingURL=posts.js.map
